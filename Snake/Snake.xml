<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Snake</name>
    </assembly>
    <members>
        <member name="T:Snake.Board">
            <summary>
            Represents a rectangular board.
            </summary>
        </member>
        <member name="P:Snake.Board.Item(Snake.Square)">
            <summary>
            Gets or sets the piece on the given square. When reassiging an existing piece to a new square, the piece is removed from its original square. 
            </summary>
            <value>The piece on the given square or <see langword="null"/> if the square is empty.</value>
        </member>
        <member name="M:Snake.Board.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Snake.Board"/> class.
            </summary>
        </member>
        <member name="T:Snake.IMove">
            <summary>
            Defines a move.
            </summary>
        </member>
        <member name="T:Snake.IMoveFilter">
            <summary>
            Defines a method for filtering collections of moves.
            </summary>
        </member>
        <member name="M:Snake.IMoveFilter.Filter(System.Collections.Generic.ICollection{Snake.IMove})">
            <summary>
            Removes inappropriate moves from the given collection.
            </summary>
            <param name="moves">The collection of moves.</param>
        </member>
        <member name="T:Snake.IMoveProvider">
            <summary>
            Defines a method for creating collections of moves.
            </summary>
        </member>
        <member name="M:Snake.IMoveProvider.GetMoves(Snake.Piece)">
            <summary>
            Gets a collection of moves for a given piece.
            </summary>
            <param name="piece">The piece.</param>
            <returns>A collection of moves.</returns>
        </member>
        <member name="T:Snake.IPieceFactory">
            <summary>
            Defines methods for creating instances of the <see cref="T:Snake.Piece"/> class.
            </summary>
        </member>
        <member name="M:Snake.IPieceFactory.CreateRook(Snake.Player)">
            <summary>
            Creates a new instance of the <see cref="T:Snake.Piece"/> class, initialized as a rook.
            </summary>
            <param name="player">The player that owns the piece.</param>
            <returns>The new rook piece.</returns>
        </member>
        <member name="T:Snake.Piece">
            <summary>
            Represents a playing piece.
            </summary>
        </member>
        <member name="P:Snake.Piece.Player">
            <summary>
            Gets the player that owns the piece.
            </summary>
            <value>The player that owns the piece.</value>
        </member>
        <member name="P:Snake.Piece.Symbol">
            <summary>
            Gets the symbol for the piece in algebraic notation.
            </summary>
            <value>The symbol for the piece.</value>
        </member>
        <member name="P:Snake.Piece.Square">
            <summary>
            Gets the square that contains the piece.
            </summary>
            <value>Thes square that contains the piece.</value>
        </member>
        <member name="M:Snake.Piece.#ctor(Snake.Player,System.Char,Snake.IMoveProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Snake.Piece"/> class.
            </summary>
            <param name="player">The player that owns the piece.</param>
            <param name="symbol">The symbol for the piece in algebraic notation.</param>
            <param name="moveProvider">The move provider that defines the piece's abilities and range of movement.</param>
        </member>
        <member name="M:Snake.Piece.GetMoves">
            <summary>
            Gets a collection of legal moves for the piece.
            </summary>
            <returns>A collection of legal moves.</returns>
        </member>
        <member name="M:Snake.Piece.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Snake.PieceFactory">
            <summary>
            Creates instances of the <see cref="T:Snake.Piece"/> class.
            </summary>
        </member>
        <member name="M:Snake.PieceFactory.CreateRook(Snake.Player)">
            <inheritdoc/>
        </member>
        <member name="T:Snake.Player">
            <summary>
            Represents a player.
            </summary>
        </member>
        <member name="T:Snake.Square">
            <summary>
            Represents a square on a board.
            </summary>
        </member>
        <member name="F:Snake.Square.MaxRank">
            <summary>
            Specifies the maximum value for the <see cref="P:Snake.Square.Rank"/> property.
            </summary>
        </member>
        <member name="F:Snake.Square.MaxFile">
            <summary>
            Specifies the maximum value for the <see cref="P:Snake.Square.File"/> property.
            </summary>
        </member>
        <member name="F:Snake.Square.Ranks">
            <summary>
            Specifies the number of ranks.
            </summary>
        </member>
        <member name="F:Snake.Square.Files">
            <summary>
            Specifies the number of files.
            </summary>
        </member>
        <member name="P:Snake.Square.X">
            <summary>
            Gets the zero-based horizontal coordinate of the square.
            </summary>
            <value>The zero-based horizontal coordinate. The default is <c>0</c>.</value>
        </member>
        <member name="P:Snake.Square.Y">
            <summary>
            Gets the zero-based vertical coordinate of the square.
            </summary>
            <value>The zero-based vertical coordinate. The default is <c>0</c>.</value>
        </member>
        <member name="P:Snake.Square.Rank">
            <summary>
            Gets the rank number of the square.
            </summary>
            <value>The rank number. The default is <c>1</c>.</value>
        </member>
        <member name="P:Snake.Square.File">
            <summary>
            Gets the file letter of the square.
            </summary>
            <value>The file letter. The default is <c>A</c>.</value>
        </member>
        <member name="M:Snake.Square.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Snake.Square"/> struct.	
            </summary>
            <param name="x">The zero-based horizontal coordinate.</param>
            <param name="y">The zero-based vertical coordinate.</param>
        </member>
        <member name="M:Snake.Square.GetValues">
            <summary>
            Gets a collection of new <see cref="T:Snake.Square"/> instances that represent all the possible values.
            </summary>
            <returns>A collection of new <see cref="T:Snake.Square"/> instances.</returns>
        </member>
        <member name="M:Snake.Square.ToString">
            <inheritdoc/>
        </member>
    </members>
</doc>
